{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Win%2011/Desktop/React-Complex/my-complex-app/src/lib/store/userSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n  profile: null,\r\n  status: 'idle', // 'idle' | 'loading' | 'succeeded' | 'failed'\r\n  error: null,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: 'user',\r\n  initialState,\r\n  reducers: {\r\n    // Example reducer for setting user profile\r\n    setProfile(state, action) {\r\n      state.profile = action.payload;\r\n      state.status = 'succeeded';\r\n    },\r\n    // Example reducer for handling errors\r\n    setError(state, action) {\r\n      state.error = action.payload;\r\n      state.status = 'failed';\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setProfile, setError } = userSlice.actions;\r\n\r\nexport default userSlice.reducer;"],"names":[],"mappings":";;;;;;;;AAAA;;AAEA,MAAM,eAAe;IACnB,SAAS;IACT,QAAQ;IACR,OAAO;AACT;AAEA,MAAM,YAAY,IAAA,6MAAW,EAAC;IAC5B,MAAM;IACN;IACA,UAAU;QACR,2CAA2C;QAC3C,YAAW,KAAK,EAAE,MAAM;YACtB,MAAM,OAAO,GAAG,OAAO,OAAO;YAC9B,MAAM,MAAM,GAAG;QACjB;QACA,sCAAsC;QACtC,UAAS,KAAK,EAAE,MAAM;YACpB,MAAM,KAAK,GAAG,OAAO,OAAO;YAC5B,MAAM,MAAM,GAAG;QACjB;IACF;AACF;AAEO,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,GAAG,UAAU,OAAO;uCAE1C,UAAU,OAAO","debugId":null}},
    {"offset": {"line": 44, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Win%2011/Desktop/React-Complex/my-complex-app/src/app/dashboard/ClientDashboard.jsx"],"sourcesContent":["'use client';\r\n\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setProfile } from '@/lib/store/userSlice';\r\n\r\nexport default function ClientDashboard({ userData }) {\r\n  const dispatch = useDispatch();\r\n  const profile = useSelector((state) => state.user.profile);\r\n\r\n  useEffect(() => {\r\n    // Dispatch the data from the server into the Redux store on the client\r\n    if (userData) {\r\n      dispatch(setProfile(userData));\r\n    }\r\n  }, [userData, dispatch]);\r\n\r\n  return (\r\n    <div>\r\n      <h2>User Profile (Client Component)</h2>\r\n      {profile ? (\r\n        <pre>{JSON.stringify(profile, null, 2)}</pre>\r\n      ) : (\r\n        <p>Loading profile...</p>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;AAJA;;;;AAMe,SAAS,gBAAgB,KAAY;QAAZ,EAAE,QAAQ,EAAE,GAAZ;;IACtC,MAAM,WAAW,IAAA,2KAAW;IAC5B,MAAM,UAAU,IAAA,2KAAW;gDAAC,CAAC,QAAU,MAAM,IAAI,CAAC,OAAO;;IAEzD,IAAA,kMAAS;qCAAC;YACR,uEAAuE;YACvE,IAAI,UAAU;gBACZ,SAAS,IAAA,yKAAU,EAAC;YACtB;QACF;oCAAG;QAAC;QAAU;KAAS;IAEvB,qBACE,qNAAC;;0BACC,qNAAC;0BAAG;;;;;;YACH,wBACC,qNAAC;0BAAK,KAAK,SAAS,CAAC,SAAS,MAAM;;;;;qCAEpC,qNAAC;0BAAE;;;;;;;;;;;;AAIX;GArBwB;;QACL,2KAAW;QACZ,2KAAW;;;KAFL","debugId":null}}]
}